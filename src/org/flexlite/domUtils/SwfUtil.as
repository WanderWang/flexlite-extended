package org.flexlite.domUtils
{
	import com.codeazur.as3swf.tags.TagDoABC;
	
	import flash.utils.ByteArray;
	
	/**
	 * SWF文件操作工具类
	 * @author DOM
	 */
	public class SwfUtil
	{
		/**
		 * 为指定的导出类名生成一个abc文件字节流
		 */		
		public static function createAbcBytesForSymbol(symbol:String):ByteArray
		{
			var abcBytes:ByteArray = new ByteArray();
			abcBytes.writeBytes(symbolStartBytes);
			
			var remaining:uint = symbol.length;
			var bytesWritten:uint;
			var currentByte:uint;
			var shouldContinue:Boolean = true;
			var filter:uint = ~0 >>> -7;
			while(shouldContinue && bytesWritten < 5)
			{
				currentByte = remaining & filter;
				remaining = remaining >> 7;
				if(remaining > 0)
				{
					currentByte = currentByte | (1 << 7);
				}
				abcBytes.writeByte(currentByte);
				shouldContinue = remaining > 0;
				bytesWritten++;
			}
			abcBytes.writeUTFBytes(symbol);
			
			abcBytes.writeBytes(symbolEndBytes);
			abcBytes.position = 0;
			return abcBytes;
		}
		
		/**
		 * 模板abc文件头部分
		 */		
		private static var symbolStartFile:Array = [0x10,0x0,0x2e,0x0,0x0,0x0,0x0,0xc,0x0];
		/**
		 * 模板abc文件结尾部分
		 */		
		private static var symbolEndFile:Array = [
			0xd,0x66,0x6c,0x61,0x73,0x68,0x2e,0x64,0x69,0x73,0x70,0x6c,0x61,0x79,0x9
			,0x4d,0x6f,0x76,0x69,0x65,0x43,0x6c,0x69,0x70,0x6,0x4f,0x62,0x6a,0x65,0x63,0x74
			,0xc,0x66,0x6c,0x61,0x73,0x68,0x2e,0x65,0x76,0x65,0x6e,0x74,0x73,0xf,0x45,0x76
			,0x65,0x6e,0x74,0x44,0x69,0x73,0x70,0x61,0x74,0x63,0x68,0x65,0x72,0xd,0x44,0x69
			,0x73,0x70,0x6c,0x61,0x79,0x4f,0x62,0x6a,0x65,0x63,0x74,0x11,0x49,0x6e,0x74,0x65
			,0x72,0x61,0x63,0x74,0x69,0x76,0x65,0x4f,0x62,0x6a,0x65,0x63,0x74,0x16,0x44,0x69
			,0x73,0x70,0x6c,0x61,0x79,0x4f,0x62,0x6a,0x65,0x63,0x74,0x43,0x6f,0x6e,0x74,0x61
			,0x69,0x6e,0x65,0x72,0x6,0x53,0x70,0x72,0x69,0x74,0x65,0x5,0x16,0x1,0x16,0x3
			,0x18,0x2,0x16,0x6,0x0,0x9,0x7,0x1,0x2,0x7,0x2,0x4,0x7,0x1,0x5,0x7
			,0x4,0x7,0x7,0x2,0x8,0x7,0x2,0x9,0x7,0x2,0xa,0x7,0x2,0xb,0x3,0x0
			,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x0,0x1,0x1,0x2,0x8
			,0x3,0x0,0x1,0x0,0x0,0x0,0x1,0x2,0x1,0x1,0x4,0x1,0x0,0x3,0x0,0x1
			,0x1,0x9,0xa,0x3,-0x30,0x30,0x47,0x0,0x0,0x1,0x1,0x1,0xa,0xb,0x6,-0x30
			,0x30,-0x30,0x49,0x0,0x47,0x0,0x0,0x2,0x2,0x1,0x1,0x9,0x27,-0x30,0x30,0x65
			,0x0,0x60,0x3,0x30,0x60,0x4,0x30,0x60,0x5,0x30,0x60,0x6,0x30,0x60,0x7,0x30
			,0x60,0x8,0x30,0x60,0x2,0x30,0x60,0x2,0x58,0x0,0x1d,0x1d,0x1d,0x1d,0x1d,0x1d
			,0x1d,0x68,0x1,0x47,0x0,0x0];
		
		/**
		 * 模板abc文件头部分字节流
		 */		
		private static var symbolStartBytes:ByteArray = arrayToBytes(symbolStartFile);
		/**
		 * 模板abc文件结尾部分字节流
		 */		
		private static var symbolEndBytes:ByteArray = arrayToBytes(symbolEndFile);
		
		/**
		 * 数组转换成字节流
		 */		
		private static function arrayToBytes(fileArray:Array):ByteArray
		{
			var bytes:ByteArray = new ByteArray();
			var length:int = fileArray.length;
			for(var i:int=0;i<length;i++)
			{
				bytes.writeByte(fileArray[i]);
			}
			return bytes;
		}
		
	}
}